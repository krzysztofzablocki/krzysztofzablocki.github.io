<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Krzysztof Zab≈Çocki </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>https://www.merowing.info/</link>
    <language>en-us</language>
    
    
    <updated>Tue, 27 Oct 2015 14:09:49 &#43;0100</updated>
    
    <item>
      <title>Introducing Sourcery Pro</title>
      <link>https://www.merowing.info/2021/04/introducing-sourcery-pro/</link>
      <pubDate>Thu, 08 Apr 2021 10:43:04 &#43;0100</pubDate>
      
      <guid>https://www.merowing.info/2021/04/introducing-sourcery-pro/</guid>
      <description>&lt;p&gt;Today I&amp;rsquo;m happy to announce a new mac app that extends Xcode features.&lt;/p&gt;

&lt;p&gt;This is an effort of over 1000 hours, so if there was ever time to show your support for all the open source work I&amp;rsquo;ve done, it&amp;rsquo;s now.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.merowing.info/sourcery-pro/&#34; title=&#34;Read More&#34;&gt;Read more&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sourcery Pro</title>
      <link>https://www.merowing.info/sourcery-pro/</link>
      <pubDate>Wed, 07 Apr 2021 15:29:09 &#43;0200</pubDate>
      
      <guid>https://www.merowing.info/sourcery-pro/</guid>
      <description>Sourcery Pro is a Mac App that extends Xcode with the ability to create your own live templates that understand your code structure.
You can create any template you want but the app also comes bundled with many popular templates to get you started.
  Default templates include:
 Mocks from any protocol Codable conformance for enums with associated values SwiftUI from data structure Lenses / Prisms Automatic interfaces from types Type erasure And many more&amp;hellip;  More info  Xcode integration Editor Writing templates  Xcode integration The app provides an Xcode Source extensions that let&amp;rsquo;s you run templates you have against the code of your projects, see it in action:</description>
    </item>
    
    <item>
      <title>The Decade in Review</title>
      <link>https://www.merowing.info/2021/03/the-decade-in-review/</link>
      <pubDate>Mon, 15 Mar 2021 10:43:04 &#43;0100</pubDate>
      
      <guid>https://www.merowing.info/2021/03/the-decade-in-review/</guid>
      <description>&lt;p&gt;Lately, I&amp;rsquo;ve spent a significant amount of time thinking about my career: what I&amp;rsquo;ve done so far and what might lie ahead for me.&lt;/p&gt;

&lt;p&gt;To gain some perspective, I&amp;rsquo;ve decided to journal some of the things I&amp;rsquo;ve done over the last decade, and to share that with you.&lt;/p&gt;

&lt;p&gt;So below you will find some of my projects for the Cocoa community, as well as the highlights of commercial work I enjoyed and can talk about (NDA&amp;rsquo;s).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Improve build times by extracting 3rd party tooling to processing script.</title>
      <link>https://www.merowing.info/2021/01/improve-build-times-by-extracting-3rd-party-tooling-to-processing-script./</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 UTC</pubDate>
      
      <guid>https://www.merowing.info/2021/01/improve-build-times-by-extracting-3rd-party-tooling-to-processing-script./</guid>
      <description>&lt;p&gt;A lot has been written about improving Swift compile times, but the compiler and linker are just part of the equation that slows down our development cycle.&lt;/p&gt;

&lt;p&gt;Most projects leverage great 3rd party tools like &lt;a href=&#34;https://github.com/realm/SwiftLint&#34;&gt;SwiftLint&lt;/a&gt;, &lt;a href=&#34;https://github.com/krzysztofzablocki/Sourcery&#34;&gt;Sourcery&lt;/a&gt;, &lt;a href=&#34;https://github.com/SwiftGen/SwiftGen&#34;&gt;SwiftGen&lt;/a&gt;, &lt;a href=&#34;https://github.com/nicklockwood/SwiftFormat&#34;&gt;SwiftFormat&lt;/a&gt; and many more. Leveraging those tools is the right thing to do but we have to be aware that all of those tools come with some time delay for our &lt;code&gt;build -&amp;gt; run&lt;/code&gt; development cycle.&lt;/p&gt;

&lt;p&gt;We often set those tools to run as build-phases which means they run each time you attempt a build but &lt;strong&gt;none of those tools need to be run each time we build&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Even tools that generate code we need for our projects like &lt;a href=&#34;https://github.com/krzysztofzablocki/Sourcery&#34;&gt;Sourcery&lt;/a&gt; or &lt;a href=&#34;https://github.com/SwiftGen/SwiftGen&#34;&gt;SwiftGen&lt;/a&gt; don&amp;rsquo;t need to be re-run unless we made changes in very specific parts of the application.&lt;/p&gt;

&lt;p&gt;As an example &lt;a href=&#34;http://nytimes.com&#34;&gt;New York Times&lt;/a&gt; main application leverages a lot of 3rd party and internal tooling, the total time all the tools take is 6s on my (powerful) machine.&lt;/p&gt;

&lt;p&gt;Only 6 seconds or as much as 6 seconds?
Let&amp;rsquo;s put this into context:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I build a project between 200-400 times on an average workday.&lt;/li&gt;
&lt;li&gt;Let&amp;rsquo;s assume 90% of the time we don&amp;rsquo;t need to run those tools with each build.&lt;/li&gt;
&lt;li&gt;We have 30 iOS developers working on the main app&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lower limit: 200 * 6s * 30 * 90* =&amp;gt; &lt;strong&gt;9 hours wasted per day&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We are wasting 45 hours per week&lt;/strong&gt;, if we can improve that it&amp;rsquo;s almost like hiring a new full-time developer, except it&amp;rsquo;s free.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s look at how we can improve this with a process change a dash of &lt;code&gt;bash&lt;/code&gt; shell programming.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Adding support for versioning and migration to your Codable models.</title>
      <link>https://www.merowing.info/2020/06/adding-support-for-versioning-and-migration-to-your-codable-models./</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 UTC</pubDate>
      
      <guid>https://www.merowing.info/2020/06/adding-support-for-versioning-and-migration-to-your-codable-models./</guid>
      <description>&lt;p&gt;&lt;code&gt;Codable&lt;/code&gt; is a great protocol for automating simple model persistence, but it lacks support for any kind of versioning or migrating the data from older versions.&lt;/p&gt;

&lt;p&gt;You can, of course, implement custom &lt;code&gt;Codable&lt;/code&gt; adherence and throw in a bunch of if statements and manual decoding to achieve this goal, but isn&amp;rsquo;t that kind of killing the main selling point of &lt;code&gt;Codable&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s look at an idea that adds Versoning yet still leverages derived &lt;code&gt;Codable&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Straighforward Data Snapshots</title>
      <link>https://www.merowing.info/2019/07/straighforward-data-snapshots/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 UTC</pubDate>
      
      <guid>https://www.merowing.info/2019/07/straighforward-data-snapshots/</guid>
      <description>&lt;p&gt;If your app has a lot of content, chances are that by the time you get a chance to work on a bug report, the data that the bug appeared on will be long gone.&lt;/p&gt;

&lt;p&gt;Here are some tidbits on how I created a simple solution for that problem at &lt;a href=&#34;http://nytimes.com&#34;&gt;The New York Times&lt;/a&gt;, it&amp;rsquo;s based on a simple idea.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finding exact difference between 2 instances</title>
      <link>https://www.merowing.info/2017/10/finding-exact-difference-between-2-instances/</link>
      <pubDate>Wed, 18 Oct 2017 12:30:51 &#43;0200</pubDate>
      
      <guid>https://www.merowing.info/2017/10/finding-exact-difference-between-2-instances/</guid>
      <description>&lt;p&gt;Have you ever written tests? Usually, they use equality asserts, e.g. XCTAssertEqual, what happens if the object isn&amp;rsquo;t equal? Xcode throws a wall of text at you:&lt;/p&gt;


&lt;figure class=&#34;center&#34;&gt;
    
        &lt;img src=&#34;https://raw.githubusercontent.com/krzysztofzablocki/Difference/master/Resources/before.png&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;This forces you to manually scan the text and try to figure out exactly whats wrong, what if instead you could just learn which property is different?&lt;/p&gt;


&lt;figure class=&#34;center&#34;&gt;
    
        &lt;img src=&#34;https://raw.githubusercontent.com/krzysztofzablocki/Difference/master/Resources/after.png&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to find retain cycles and memory leaks sooner</title>
      <link>https://www.merowing.info/2017/10/how-to-find-retain-cycles-and-memory-leaks-sooner/</link>
      <pubDate>Sun, 01 Oct 2017 12:30:51 &#43;0200</pubDate>
      
      <guid>https://www.merowing.info/2017/10/how-to-find-retain-cycles-and-memory-leaks-sooner/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/krzysztofzablocki/LifetimeTracker&#34;&gt;
&lt;figure class=&#34;center&#34;&gt;
    
        &lt;img src=&#34;https://raw.githubusercontent.com/krzysztofzablocki/LifetimeTracker/master/Resources/demo-circular.gif&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LifetimeTracker can surface retain cycle / memory issues right as you develop your application, and it will surface them to you immediately, so you can find them with more ease.&lt;/p&gt;

&lt;p&gt;Instruments and Memory Graph Debugger are great, but too many times developers forget to check for issues as they close the feature implementation.&lt;/p&gt;

&lt;p&gt;If you use those tools sporadicaly many of the issues they surface will require you to investigate the cause, and cost you a lot of time in the process.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Metaprogramming in Swift talk</title>
      <link>https://www.merowing.info/2017/05/metaprogramming-in-swift-talk/</link>
      <pubDate>Wed, 03 May 2017 08:04:14 &#43;0200</pubDate>
      
      <guid>https://www.merowing.info/2017/05/metaprogramming-in-swift-talk/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently spoke at &lt;a href=&#34;https://craft-conf.com&#34;&gt;CraftConf&lt;/a&gt; about metaprogramming in Swift using my &lt;a href=&#34;https://github.com/krzysztofzablocki/Sourcery&#34;&gt;Sourcery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can watch the talk online:&lt;/p&gt;

&lt;iframe width=&#34;728&#34; height=&#34;409&#34; src=&#34;http://www.ustream.tv/embed/recorded/102903026?html5ui&#34; scrolling=&#34;no&#34; allowfullscreen webkitallowfullscreen frameborder=&#34;0&#34; style=&#34;border: 0 none transparent;&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using protocol compositon for dependency injection</title>
      <link>https://www.merowing.info/2017/04/using-protocol-compositon-for-dependency-injection/</link>
      <pubDate>Wed, 12 Apr 2017 18:13:31 &#43;0200</pubDate>
      
      <guid>https://www.merowing.info/2017/04/using-protocol-compositon-for-dependency-injection/</guid>
      <description>&lt;figure class=&#34;center&#34;&gt;
    
        &lt;img src=&#34;https://www.merowing.info/2017/04/RefactorSwift.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;I like using composition and dependency injection, but when you need to inject each entity with multiple dependencies, it can get cumbersome fast.&lt;/p&gt;

&lt;p&gt;As the project grows and you need to inject more dependencies into your objects, you will end up having to refactor your methods a lot of times, as we all know Xcode doesn&amp;rsquo;t help with that.&lt;/p&gt;

&lt;p&gt;There is a more manageable way.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stop weak-strong dance</title>
      <link>https://www.merowing.info/2017/04/stop-weak-strong-dance/</link>
      <pubDate>Mon, 03 Apr 2017 16:52:42 &#43;0200</pubDate>
      
      <guid>https://www.merowing.info/2017/04/stop-weak-strong-dance/</guid>
      <description>&lt;p&gt;Closures in Swift are extremely useful, they are interchangeable with functions and that creates a lot of opportunities for useful use-cases. One thing we have to be careful when using them is to avoid &lt;strong&gt;retain cycles&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We have to do it so often that it begs the question:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can we improve the call-site API?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Swift Coders interview</title>
      <link>https://www.merowing.info/2017/02/swift-coders-interview/</link>
      <pubDate>Thu, 02 Feb 2017 18:50:14 &#43;0100</pubDate>
      
      <guid>https://www.merowing.info/2017/02/swift-coders-interview/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been interviewed at Swift Coders podcast:&lt;/p&gt;

&lt;iframe id=&#34;audio_iframe&#34; src=&#34;https://www.podbean.com/media/player/6eh75-6737ed?skin=103&#34; width=&#34;100%&#34; height=&#34;100&#34; frameborder=&#34;0&#34; scrolling=&#34;no&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;I&amp;rsquo;m definitely investing into a better Microphone next time I&amp;rsquo;m doing any audio recording.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://benscheirman.com/2017/01/an-affordable-dynamic-mic-recommendation/&#34;&gt;Ben Scheirman from NSPodcast has good recommendations for affordable microphone&lt;/a&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Seniority</title>
      <link>https://www.merowing.info/2017/01/seniority/</link>
      <pubDate>Wed, 18 Jan 2017 15:43:04 &#43;0100</pubDate>
      
      <guid>https://www.merowing.info/2017/01/seniority/</guid>
      <description>&lt;p&gt;People use different words to classify Engineer skill, some companies give you more senior role just based on a number of years you have been working there, but what does it mean to be Senior?&lt;/p&gt;

&lt;p&gt;In this article, I composed a complete and final list of API&amp;rsquo;s that you need to know to classify yourself as Senior Engineer.&lt;/p&gt;

&lt;p&gt;Here‚Äôs a list of all the APIs you must know:&lt;/p&gt;

&lt;p&gt;‚Ä¢&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Testing iOS Apps</title>
      <link>https://www.merowing.info/2017/01/testing-ios-apps/</link>
      <pubDate>Wed, 11 Jan 2017 09:17:47 &#43;0200</pubDate>
      
      <guid>https://www.merowing.info/2017/01/testing-ios-apps/</guid>
      <description>&lt;figure class=&#34;center&#34;&gt;
    
        &lt;img src=&#34;https://www.merowing.info/2017/01/testing.png&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;Writing tests in iOS apps is a touchy subject. Not everyone is so privileged to be able to write tests full-time, for different reasons.&lt;/p&gt;

&lt;p&gt;Some people have full control over their development process and choose not to write tests, maybe because they have had a bad experience with it or they just don&amp;rsquo;t see the value in them.&lt;/p&gt;

&lt;p&gt;I would argue that if you are part of a smaller team, tests can even be more helpful than in big corporations.&lt;/p&gt;

&lt;p&gt;A big corporation might have dedicated QA team, but if you are one of 2 developers, then you are often responsible for ensuring quality and reliability of your work, its considerable pressure because each feature you write might break something else in your app.&lt;/p&gt;

&lt;p&gt;Let us look at practices and tips for writing maintainable tests in your iOS Apps.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How hard would it be to adjust your iOS app in real-time?</title>
      <link>https://www.merowing.info/2017/01/how-hard-would-it-be-to-adjust-your-ios-app-in-real-time/</link>
      <pubDate>Mon, 02 Jan 2017 17:21:09 &#43;0200</pubDate>
      
      <guid>https://www.merowing.info/2017/01/how-hard-would-it-be-to-adjust-your-ios-app-in-real-time/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/krzysztofzablocki/Traits&#34;&gt;
&lt;figure class=&#34;center&#34;&gt;
    
        &lt;img src=&#34;https://www.merowing.info/2017/01/demo.gif&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Iterating over design that needs to be reflected in code can be tedious and time-consuming.&lt;/p&gt;

&lt;p&gt;Typically the designer works in graphics editing software and then submits flat art to the developer who implements the design in code. Refining the design requires going through the same laborious process.&lt;/p&gt;

&lt;p&gt;Even harder if we want to support multiple themes in our apps. How would we even approach that if we were using Interface Builder?&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s look at how we can approach implementing a simple library that could solve all of the above concerns.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
