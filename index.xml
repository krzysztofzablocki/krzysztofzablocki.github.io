<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title> on Krzysztof Zabłocki </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://merowing.info/</link>
    <language>en-us</language>
    
    
    <updated>Wed, 03 Feb 2016 13:13:48 &#43;0100</updated>
    
    <item>
      <title>8 Books that everyone should read</title>
      <link>http://merowing.info/2016/02/8-books-that-everyone-should-read/</link>
      <pubDate>Wed, 03 Feb 2016 13:13:48 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2016/02/8-books-that-everyone-should-read/</guid>
      <description>&lt;p&gt;
&lt;figure class=&#34;center&#34;&gt;
    
        &lt;img src=&#34;http://merowing.info/2016/02/books.png&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;Looking for new books to read?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming</title>
      <link>http://merowing.info/2016/01/programming/</link>
      <pubDate>Thu, 14 Jan 2016 16:21:06 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2016/01/programming/</guid>
      <description>&lt;p&gt;
&lt;figure class=&#34;center&#34;&gt;
    
        &lt;img src=&#34;http://merowing.info/2016/01/programming.png&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;What is programming?&lt;/p&gt;

&lt;p&gt;For me it has always been about solving problems, and analytical thinking.&lt;/p&gt;

&lt;p&gt;Does it matter what language or platform you solve problems on? How do you learn more on your selected platform?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Improve your iOS Architecture with FlowControllers</title>
      <link>http://merowing.info/2016/01/improve-your-ios-architecture-with-flowcontrollers/</link>
      <pubDate>Tue, 05 Jan 2016 11:23:46 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2016/01/improve-your-ios-architecture-with-flowcontrollers/</guid>
      <description>&lt;p&gt;When working on iOS app, now more than ever one should avoid having view controllers pushing other view controllers around.&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Little things that can make your life easier in 2016</title>
      <link>http://merowing.info/2015/12/little-things-that-can-make-your-life-easier-in-2016/</link>
      <pubDate>Wed, 23 Dec 2015 10:31:43 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/12/little-things-that-can-make-your-life-easier-in-2016/</guid>
      <description>&lt;p&gt;As we are closing this year, let&amp;rsquo;s take a look at few simple things you can add to your iOS developer toolbox to make your life easier and be more productive in 2016.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Selected projects</title>
      <link>http://merowing.info/projects-alternative/</link>
      <pubDate>Fri, 18 Dec 2015 06:27:04 &#43;0100</pubDate>
      
      <guid>http://merowing.info/projects-alternative/</guid>
      <description>Foldify -- Foldify Foldify Zoo Foldify Dino Storest Bord Sun&amp;#43; Goals Headspace Explain Everything Beautiful Weather Robin Bold Poker Biznes.pl -- Foldify is my most succesful Indie app, but all of them have been featured by Apple. Apple Best of 2013, Editor&amp;rsquo;s Choice Apple Essential app. Apple Design Award nominee. #3 in USA Top Paid Overall. Received multiple awards, including one from the National Ministry of Culture Received rave reviews from all major technical sites, you can read some interviews at Wired, The Next Web and Gigaom.</description>
    </item>
    
    <item>
      <title>Selected Projects</title>
      <link>http://merowing.info/projects-original/</link>
      <pubDate>Fri, 18 Dec 2015 06:27:04 &#43;0100</pubDate>
      
      <guid>http://merowing.info/projects-original/</guid>
      <description>Playgrounds for Objective-C and Swift Faster than Swift playgrounds (a lot) Extra controls for tweaking IDE agnostic, once you run it, you can modify the code even from vim. Full iOS simulator and access to all iOS features, so you can prototype production ready code. That and few other useful projects are available on my GitHub page Foldify, Foldify Zoo, Foldify Dino Apple Best of 2013, Editor&amp;rsquo;s Choice Apple Essential app.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://merowing.info/projects/</link>
      <pubDate>Fri, 18 Dec 2015 06:27:04 &#43;0100</pubDate>
      
      <guid>http://merowing.info/projects/</guid>
      <description>Over the years I&amp;rsquo;ve written a lot of projects, here are selected few. Send me an email if you want to hire me or get some additional informations. Indie - Pixle Foldify Foldify Zoo Foldify Dino Storest Bord Foldify is my most succesful Indie app, but all of them have been featured by Apple. Apple Best of 2013, Editor&amp;rsquo;s Choice Apple Essential app Apple Design Award nominee #3 in USA Top Paid Overall Received multiple awards, e.g.</description>
    </item>
    
    <item>
      <title>Details matter - harnessing the power of Core Animation</title>
      <link>http://merowing.info/2015/12/details-matter---harnessing-the-power-of-coreanimation/</link>
      <pubDate>Wed, 16 Dec 2015 22:23:13 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/12/details-matter---harnessing-the-power-of-coreanimation/</guid>
      <description>&lt;p&gt;A friend showed me animations from &lt;a href=&#34;https://medium.com/bridge-collection/improve-the-payment-experience-with-animations-3d1b0a9b810e#.15j1me98l&#34;&gt;Stripe Checkout&lt;/a&gt; and asked: &amp;ldquo;how could we implement that on iOS?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Quite simply, Core Animation is very powerful and if one learns how to harness that power, they do not need write a lot of code.&lt;/p&gt;

&lt;video autoplay loop&gt;
  &lt;source src=&#34;http://merowing.info/2015/12/details.mov&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
</description>
    </item>
    
    <item>
      <title>The best of my creations</title>
      <link>http://merowing.info/bestOf/</link>
      <pubDate>Thu, 10 Dec 2015 12:14:28 &#43;0100</pubDate>
      
      <guid>http://merowing.info/bestOf/</guid>
      <description>This is an list of what I think are best things you should check out, a lot of it is based on usefulness / popularity but also my personal view how important or helpful they are. Libraries / Tools KZPlaygrounds - Playgrounds that can support both Swift and Objective-C + a lot of extra features that will make your life easier. KZPropertyMapper - If you have to map JSON in Objective-C, this is really helpful and it requires nothing at all from your code base, no subclassing, no dependencies and no restrictions.</description>
    </item>
    
    <item>
      <title>Writing Xcode plugin in Swift</title>
      <link>http://merowing.info/2015/12/writing-xcode-plugin-in-swift/</link>
      <pubDate>Tue, 08 Dec 2015 11:07:09 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/12/writing-xcode-plugin-in-swift/</guid>
      <description>&lt;p&gt;
&lt;figure class=&#34;center&#34;&gt;
    
        &lt;img src=&#34;http://merowing.info/2015/12/logs.gif&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve found myself using Xcode a lot more than I did in Objective-C.&lt;/p&gt;

&lt;p&gt;One of things I’ve missed a lot from my &lt;a href=&#34;https://www.jetbrains.com/objc/&#34;&gt;AppCode&lt;/a&gt; setup, is the  ability to jump to specific file &amp;amp; line that logged a console message.&lt;/p&gt;

&lt;p&gt;Because Xcode doesn’t offer such functionality and because I do not like to complain, I’ve decided to write my own plugin for it.&lt;/p&gt;

&lt;p&gt;I wrote it in Swift.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The beauty of imperfection</title>
      <link>http://merowing.info/2015/11/the-beauty-of-imperfection/</link>
      <pubDate>Tue, 24 Nov 2015 12:29:37 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/11/the-beauty-of-imperfection/</guid>
      <description>&lt;video autoplay loop&gt;
  &lt;source src=&#34;http://merowing.info/2015/12/dot-animated.mov&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

&lt;p&gt;Perfection is not something one can truly achieve, so it’s very smart that one of the best meditation services called &lt;a href=&#34;https://www.headspace.com&#34;&gt;Headspace&lt;/a&gt; is using an imperfect dot as their brand logo.&lt;/p&gt;

&lt;p&gt;If you ever used their iOS app, you can notice how their dot slightly deforms, captivating your focus.&lt;/p&gt;

&lt;p&gt;When it comes to graphics, if you are able to cheat (if user can’t tell the difference) and make tech stuff easier, just do it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Swift init()</title>
      <link>http://merowing.info/2015/11/swift-init/</link>
      <pubDate>Tue, 17 Nov 2015 13:51:00 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/11/swift-init/</guid>
      <description>&lt;p&gt;With Swift strong typing and immutability, there are rules that prevent you from accesing variables until an object is fully initialized.&lt;/p&gt;

&lt;p&gt;I do not like having a function do more than one thing, so I like to split my initializers into multiple functions, this becomes problematic.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips for Interface Builder</title>
      <link>http://merowing.info/2015/11/tips-for-interface-builder/</link>
      <pubDate>Fri, 13 Nov 2015 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2015/11/tips-for-interface-builder/</guid>
      <description>&lt;p&gt;Young developers are happy when they write a lot of code, they like to brag about that project that has tens of thousands lines of code they wrote.&lt;/p&gt;

&lt;p&gt;As we get more experienced, we realize that code is expensive. It&amp;rsquo;s expensive to maintain, debug and reason about.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s why we should aim to use tools that can help us avoid writing boilerplate code, one of those tools is Interface Builder.&lt;/p&gt;

&lt;p&gt;Here are a few of my favourite tips &amp;amp; tricks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Prototyping floating burger menu with CAShapeLayer</title>
      <link>http://merowing.info/2015/11/prototyping-floating-burger-menu-with-cashapelayer/</link>
      <pubDate>Wed, 04 Nov 2015 13:29:44 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/11/prototyping-floating-burger-menu-with-cashapelayer/</guid>
      <description>&lt;video autoplay loop&gt;
  &lt;source src=&#34;http://merowing.info/2015/11/Header-small.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

&lt;p&gt;Reproducing above effect is very simple with CAShapeLayer and CoreAnimation&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://merowing.info/about/</link>
      <pubDate>Tue, 27 Oct 2015 14:09:49 &#43;0100</pubDate>
      
      <guid>http://merowing.info/about/</guid>
      <description>I started making apps for iOS in 2008, when the first iPhone was released. Up until then, I was working in games and graphics programming, but I think I can say that I&amp;rsquo;ve settled most comfortably into app-making. Almost a decade later, I&amp;rsquo;m still making apps - across a broad range of industries and technologies. My experience allows me not only to deliver robust technical solutions, but also to add value to user experience and interface design for my clients.</description>
    </item>
    
  </channel>
</rss>

