<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Swift on Krzysztof Zabłocki </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://merowing.info/tags/swift/</link>
    <language>en-us</language>
    
    
    <updated>Wed, 13 Jul 2016 17:36:06 &#43;0200</updated>
    
    <item>
      <title>Logging in Swift</title>
      <link>http://merowing.info/2016/07/logging-in-swift/</link>
      <pubDate>Wed, 13 Jul 2016 17:36:06 &#43;0200</pubDate>
      
      <guid>http://merowing.info/2016/07/logging-in-swift/</guid>
      <description>&lt;p&gt;Logging is one of rare cases when you could probably justify having a singleton, but with Swift Protocol Extension you don&amp;rsquo;t need to.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s integrate Logging in a way that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Doesn&amp;rsquo;t cause 3rd party dependencies to leak across your codebase&lt;/li&gt;
&lt;li&gt;Hides the existence of singleton from the codebase&lt;/li&gt;
&lt;li&gt;Supports writing fully testable code&lt;/li&gt;
&lt;li&gt;Ability to supress logs from specific modules or classes&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Swift init()</title>
      <link>http://merowing.info/2015/11/swift-init/</link>
      <pubDate>Tue, 17 Nov 2015 13:51:00 &#43;0100</pubDate>
      
      <guid>http://merowing.info/2015/11/swift-init/</guid>
      <description>&lt;p&gt;With Swift strong typing and immutability, there are rules that prevent you from accesing variables until an object is fully initialized.&lt;/p&gt;

&lt;p&gt;I do not like having a function do more than one thing, so I like to split my initializers into multiple functions, this becomes problematic.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Swift introduction into fitness</title>
      <link>http://merowing.info/2014/09/a-swift-introduction-into-fitness/</link>
      <pubDate>Tue, 30 Sep 2014 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2014/09/a-swift-introduction-into-fitness/</guid>
      <description>&lt;p&gt;Many people think getting fit is hard, the fitness industry is full of myths and unnecessary complications.&lt;/p&gt;

&lt;p&gt;Doesn’t matter if your goal is to lose weight or gain it, what matter is Physics and law of energy:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you burn more calories than you eat you will lose weight&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Two questions arise:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;how to estimate our caloric needs?&lt;/li&gt;
&lt;li&gt;how fast should we lose or gain weight?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We&amp;rsquo;ll use Swift Playgrounds to explain it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Implementing observable in Swift</title>
      <link>http://merowing.info/2014/07/implementing-observable-in-swift/</link>
      <pubDate>Thu, 17 Jul 2014 00:00:00 UTC</pubDate>
      
      <guid>http://merowing.info/2014/07/implementing-observable-in-swift/</guid>
      <description>&lt;p&gt;KVO has been integral part of Cocoa programming, yet it&amp;rsquo;s not available for pure Swift classes.&lt;/p&gt;

&lt;p&gt;Is there a way to implement your own implementation of native KVO?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

